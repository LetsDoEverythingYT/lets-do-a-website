@using lets_do_a_website.Data.Entities

@{
    ViewData["Title"] = "50 Ways to Die";
    var streamers = (ViewData["streamers"] as IEnumerable<Permissions>);
    var mods = (ViewData["mods"] as IEnumerable<Permissions>);
}
<br />
Shoutout to <a href="https://www.twitch.tv/cliffy">Cliffy</a> for the idea from maker 1. I Kept the basic concept & added some deaths. Not many rule differences.
<br />
<br />
<div class="container">
    <div class="row">
        <div class="col-7">
            <div class="row">
                <div class="dropdown col-4">
                    @if(streamers.Count() == 1)
                    {
                        <a class="btn btn-outline-dark btn-lg btn-block" asp-controller="WTD" asp-action="Tracker" asp-route-id="@streamers.First().Streamer">Track a Run</a>

                    } else
                    {
                        <button class="btn btn-outline-dark btn-lg btn-block dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                            Track a run for:
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                            @foreach (Permissions p in streamers)
                            {
                                <a class="dropdown-item" asp-controller="WTD" asp-action="Tracker" asp-route-id="@p.Streamer">@p.Streamer</a>

                            }
                        </ul>
                    }
                </div>
            </div>
            <br />
            <br />
            <div class="btn btn-outline-dark btn-lg btn-block btn-secondary" asp-controller="WTD" asp-action="Index">Create a match (Not yet implemented)</div>
            <br />
            <br />


            <a class="btn btn-outline-dark btn-lg btn-block btn-secondary" asp-controller="WTD" asp-action="Hyduron">Hyduron's race (Not yet implemented)</a>
        <br />
        <br />


            <a class="btn btn-outline-dark btn-lg btn-block btn-secondary">25 Ways To Die (Not yet implemented)</a>
        <br /><br />
        </div>

        <div id="Modbox" class="col-5">
            @*
            send new auth request for moderation:read scope, gets streamer's mods.
            Store list as keyed to streamer. Allow manual adds after list created

            On mod access view, On id=cookieid check, if fail then do secondary check against modsfor(id)=cookieid, if pass then grant page
            if fail, pass id &Aacute; fail status into view, at top of tracker page display "You tried to access id's tracker. they have to grant you access to that frist'"
            make sure page is referencing tracker IDs everywhere, not cookieid (do a global review actually)
            https://dev.twitch.tv/docs/authentication/scopes
            https://dev.twitch.tv/docs/api/reference#get-moderators*@

            <div id="o1" class="col-6">


                <div>Allow your mods to track your run</div>
                <a class="btn btn-outline-dark btn-lg btn-block" asp-controller="WTD" asp-action="Hyduron">Import from Twitch (doesnt work yet)</a>

                <br />
                <div>Allow specific users:</div>
                <form method="post" asp-controller="WTD" asp-action="AddMod">
                    <div class="input-group">
                        <input type="text" class="form-control" value="" id="id" name="id">
                        <button class="btn btn-outline-dark" type="submit" title="Add">Add</button>
                    </div>
                </form>


                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                        Currently allowed
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                        @foreach (Permissions p in mods)
                        {
                            <li class="dropdown-item">@p.Mod</li>
                        }
                    </ul>
                </div>
                <br />
                <a class="btn btn-outline-dark btn-lg btn-block btn-danger" asp-controller="WTD" asp-action="Hyduron">Remove All</a>

                <br />
            </div>
        </div>
    </div>
    <br />
</div>

