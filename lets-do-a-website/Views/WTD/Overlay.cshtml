@using lets_do_a_website.Data.Entities;
@model Tracker

<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>


<div id="divvydivdiv" class="container-fluid" style="width:1750px;margin-left:0px;gap:15px;">
    <span id="score-panel" class="position-relative d-inline-block" style="background:url(/img/50wtd/obg.png); width:165px; height:80px;top:35px">
        <span id="profile-pic" class="position-absolute" style="left:10px; top:10px">
                @if("none".Equals(ViewData["img"]))
                {
                    <img class="rounded-circle shadow-lg" src="~/img/twag.png" width="50">
                } 
                else
                {
                    <img class="rounded-circle shadow-lg" src="@ViewData["img"]" width="50">

                }
            </span>
        <span id="countycountcount" class="position-absolute" style="font-size:50px;left:90px; top:1px">00</span>
    </span>
    
@foreach (var d in Model.DeathWays!.Values.Where(x=> x.Active==true))
{
    <img id="img-@d.Id" src="~/img/50wtd/@(d.Id).png" style="padding:2px 0;"/>
}

</div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script type="text/javascript">

        function initializeSignalRConnection(t) {
            var conn = new signalR.HubConnectionBuilder()
                .withUrl("/trackerhub?tracker=" + t)
                .withAutomaticReconnect()
                .build();



            try {
                conn.start();
            } catch (err) {
                console.log(err);
            }

            conn.onreconnecting((error) => {
                console.log("recon");
            });
            conn.onreconnected((error) => {
                console.log("ded");
            });

            return conn;
        }


        
        const conn = initializeSignalRConnection("@Model.Id");
        var deaths = @Model.DeathWays.Values.Where(x=> x.Active==false).Count();
        recalc();


        conn.on("ReceiveNewDeath", ({ trackerId, deathId, deathCount }) => {
            
            document.getElementById("img-"+deathId).remove();
            deaths = deaths +1;
            recalc();
        });


        conn.on("ReceiveUndo", ({ trackerId, deathId, deathCount }) => {
            var i = new Image();
            i.id="img-" + deathId;
            i.src = "/img/50wtd/" + deathId + ".png";
            document.getElementById("divvydivdiv").appendChild(i);
            deaths = deaths -1;
            recalc();
        });

        conn.on("ForceRefresh", () => {
            location.reload();
        });

        function recalc() {
            //var remaining = document.getElementById("divvydivdiv").getElementsByTagName("img").length
            var dfiller="";
            if(deaths <10) 
                dfiller = "0";
            

            document.getElementById("countycountcount").innerText = "" + dfiller + deaths;
        }


</script>
</body>
</html>
